<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.Glide">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.Glide"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.Glide"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.Glide"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader$1: boolean onException(java.lang.Exception,android.net.Uri,com.bumptech.glide.request.target.Target,boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void access$100(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onClickCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.helper.RetainFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;,com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)"/>
      <source name="com.fsck.k9.helper.RetainFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.helper.RetainFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;,void clearAndRemove(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.helper.RetainFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.compose.QuotedMessagePresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessagePresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessagePresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.compose.QuotedMessageMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessageMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessageMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.compose.QuotedMessageMvpView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessageMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessageMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.compose.QuotedMessagePresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessagePresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.compose.QuotedMessagePresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessageMetadata(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void &lt;init&gt;(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView: void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessageMvpView$2: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.compose.QuotedMessagePresenter: void onClickEditQuotedText()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void loadQuotedTextForEdit()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void &lt;init&gt;(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.message.ComposePgpEnableByDefaultDecider,com.fsck.k9.message.AutocryptStatusInteractor,com.fsck.k9.helper.ReplyToParser,com.fsck.k9.activity.compose.RecipientPresenter$RecipientsChangedListener)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="addToBackStack" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;,&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="addToBackStack" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;,&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMoreFromSameSender(java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$2: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCcTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper$4: void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$1100(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onMessageDownloadFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifFrameLoader">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifFrameLoader">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawableTransformation">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawableTransformation"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawableTransformation"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawableTransformation"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showNextMessageOrReturn()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showNextMessageOrReturn()&gt;,&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showNextMessageOrReturn()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.misc.ContactPictureLoader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.misc.ContactPictureLoader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.fragment.MessageListAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetPgpInline(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifResourceDecoder">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable$GifState">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.AttachmentView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.AttachmentView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.AttachmentView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.AttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$3">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$3: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onBccTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpInlineChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageContainerView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifResourceDecoder">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifResourceDecoder">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.AlternateRecipientAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.AlternateRecipientAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.AlternateRecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.AlternateRecipientAdapter: void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.MessageHeader">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.MessageHeader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.MessageHeader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.MessageHeader"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageTopView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onSwitchComplete(int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onSwitchComplete(int)&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onSwitchComplete(int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenRemoved(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenRemoved()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onBound(org.openintents.openpgp.IOpenPgpService2)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$600(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageContainerView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageContainerView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageTopView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageTopView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageCryptoPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageCryptoPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageCryptoPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageCryptoPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageCryptoPresenter: boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$5">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$5">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;,&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$700(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void showMessage(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void displayMessageViewContainer(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.ui.messageview.MessageContainerView$OnRenderingFinishedListener,boolean,boolean,com.fsck.k9.ui.messageview.AttachmentViewCallback)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageContainerView: void renderAttachments(com.fsck.k9.mailstore.MessageViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.setup.AccountSetupCheckSettings">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;,void showDialogFragment(int,java.lang.String), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.setup.AccountSetupCheckSettings"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="ReceiveFromRetValue" unit="$r8 = virtualinvoke r0.&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="addFunction" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r7, $r1)"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="commit" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.setup.AccountSetupCheckSettings">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String)&gt;,&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;,void showDialogFragment(int,java.lang.String), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.setup.AccountSetupCheckSettings"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="ReceiveFromRetValue" unit="$r8 = virtualinvoke r0.&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="addFunction" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r7, $r1)"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="commit" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.setup.AccountSetupCheckSettings$2">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings$2: void run()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings$2: void run()&gt;,&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String)&gt;,&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;,void showDialogFragment(int,java.lang.String), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.setup.AccountSetupCheckSettings"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings$2: void run()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: void showDialogFragment(int,java.lang.String)&gt;"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="ReceiveFromRetValue" unit="$r8 = virtualinvoke r0.&lt;com.fsck.k9.activity.setup.AccountSetupCheckSettings: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="addFunction" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r7, $r1)"/>
        <node method="AccountSetupCheckSettings showDialogFragment" type="commit" unit="virtualinvoke $r9.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void restartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncRestartMessageCryptoProcessing()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetSignOnly(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$4: void redisplayMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncReloadMessage()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.LockedAttachmentView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.LockedAttachmentView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;,&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;,&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.LockedAttachmentView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void onClick(android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.LockedAttachmentView: void showUnlockedView()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void setAttachment(com.fsck.k9.mailstore.AttachmentViewInfo)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void displayAttachmentInformation()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.AttachmentView: void refreshThumbnail()&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageLoaderHelper$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,java.lang.Object)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.activity.MessageLoaderHelper"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper$1: void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void access$600(com.fsck.k9.activity.MessageLoaderHelper)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void onLoadMessageFromDatabaseFinished()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;,com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean), &lt;com.fsck.k9.helper.RetainFragment: com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean)&gt;"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="ReceiveFromParatMethod" unit="$r0 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment findOrCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r0.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment findOrCreate" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, $r1)"/>
        <node method="RetainFragment findOrCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;,&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;,void cancelAndClearCryptoOperation(), &lt;com.fsck.k9.helper.RetainFragment: void clearAndRemove(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onActivityCreated(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void startOrResumeLocalMessageLoader()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageLoaderHelper: void cancelAndClearCryptoOperation()&gt;"/>
        <node method="RetainFragment clearAndRemove" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RetainFragment clearAndRemove" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RetainFragment clearAndRemove" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onMenuSetEnableEncryption(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerFragment">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;,void onAttach(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.manager.RequestManagerFragment"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientMvpView$1">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientMvpView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView$1: void onTokenAdded(com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onToTokenAdded()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void removeMessageListFragment()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void removeMessageListFragment()&gt;,void removeMessageListFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageListFragment()&gt;"/>
        <node method="MessageList removeMessageListFragment" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageListFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageListFragment" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onBackStackChanged()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onBackStackChanged()&gt;,&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onBackStackChanged()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientPresenter$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientPresenter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$4: void onError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$700(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoProviderError(java.lang.Exception)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpSignOnlyChange(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpSignOnlyDisabled()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpInlineChanged(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.compose.RecipientAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.compose.RecipientAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose$4">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$4: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$300(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;,&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;,&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;,&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean dispatchKeyEvent(android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onCustomKeyDown(int,android.view.KeyEvent)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleFlagged()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.manager.SupportRequestManagerFragment">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;,void onAttach(android.app.Activity), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.manager.SupportRequestManagerFragment"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose$7">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onPause()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftImplicitly()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable$GifState">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose$12">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$12: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$1100(com.fsck.k9.activity.MessageCompose)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;,&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;,&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;,&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: android.app.Dialog onCreateDialog(int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose$7: void onClick(android.content.DialogInterface,int)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void access$400(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onSwitchAccount(com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setupCryptoProvider()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;,void openMessage(com.fsck.k9.activity.MessageReference), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="MessageList openMessage" type="ReceiveFromRetValue" unit="$r11 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList openMessage" type="beginTransaction" unit="$r12 = virtualinvoke $r11.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList openMessage" type="replaceFunction" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558592, $r10)"/>
        <node method="MessageList openMessage" type="commit" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;,void openMessage(com.fsck.k9.activity.MessageReference), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="MessageList openMessage" type="ReceiveFromRetValue" unit="$r11 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList openMessage" type="beginTransaction" unit="$r12 = virtualinvoke $r11.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList openMessage" type="replaceFunction" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558592, $r10)"/>
        <node method="MessageList openMessage" type="commit" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void displayViews()&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void displayViews()&gt;,&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void displayViews()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.MessageList: void displayViews()&gt;,&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void displayViews()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;,void openMessage(com.fsck.k9.activity.MessageReference), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="MessageList openMessage" type="ReceiveFromRetValue" unit="$r11 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList openMessage" type="beginTransaction" unit="$r12 = virtualinvoke $r11.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList openMessage" type="replaceFunction" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558592, $r10)"/>
        <node method="MessageList openMessage" type="commit" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;,&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void checkToSaveDraftAndSave()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void performSaveAfterChecks()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onOpenPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoPgpClickDisable()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.fragment.MessageListAdapter">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;,&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;,&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;,&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.fragment.MessageListAdapter"/>
      <nodes>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;"/>
        <node method="&lt;com.fsck.k9.fragment.MessageListAdapter: void updateContactBadge(com.fsck.k9.fragment.MessageViewHolder,com.fsck.k9.mail.Address)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.ui.messageview.MessageViewFragment$5">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment$5: void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.view.RecipientSelectView">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.view.RecipientSelectView"/>
      <nodes>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void &lt;init&gt;(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void initView(android.content.Context)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageCompose">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;,&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;,&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;,&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;,&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageCompose"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageCompose: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onActivityResult(int,int,android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void cryptoProviderBindOrCheckPermission()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void onPgpPermissionCheckResult(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void handleOpenPgpError(org.openintents.openpgp.OpenPgpError)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void asyncUpdateCryptoStatus()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(java.lang.Object)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter$1: void onPostExecute(com.fsck.k9.message.AutocryptStatusInteractor$RecipientAutocryptStatus)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void access$400(com.fsck.k9.activity.compose.RecipientPresenter)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientPresenter: void redrawCachedCryptoStatusIcon()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientMvpView: void setRecipientTokensShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void setShowCryptoEnabled(boolean)&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void redrawAllTokens()&gt;"/>
        <node method="&lt;com.fsck.k9.view.RecipientSelectView: void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.compose.RecipientAdapter: void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.view.RecipientSelectView$Recipient,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;,void openMessage(com.fsck.k9.activity.MessageReference), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.ui.messageview.MessageViewFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void openMessage(com.fsck.k9.activity.MessageReference)&gt;"/>
        <node method="MessageList openMessage" type="ReceiveFromRetValue" unit="$r11 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList openMessage" type="beginTransaction" unit="$r12 = virtualinvoke $r11.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList openMessage" type="replaceFunction" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558592, $r10)"/>
        <node method="MessageList openMessage" type="commit" unit="virtualinvoke $r12.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;,void initializeFragments(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <destination name="com.fsck.k9.fragment.MessageListFragment"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void initializeFragments()&gt;"/>
        <node method="MessageList initializeFragments" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList initializeFragments" type="beginTransaction" unit="$r3 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList initializeFragments" type="addFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)&gt;(2131558591, $r2)"/>
        <node method="MessageList initializeFragments" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageListFragment()&gt;,void removeMessageListFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void onNewIntent(android.content.Intent)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageListFragment()&gt;"/>
        <node method="MessageList removeMessageListFragment" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageListFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageListFragment" type="commit" unit="virtualinvoke $r2.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;,&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageViewFragment: void onToggleRead()&gt;"/>
        <node method="&lt;com.fsck.k9.ui.messageview.MessageTopView: void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.view.MessageHeader: void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadContactPicture(android.net.Uri,com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.misc.ContactPictureLoader: void loadFallbackPicture(com.fsck.k9.mail.Address,android.widget.ImageView)&gt;"/>
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)&gt;"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;(r3, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.fsck.k9.activity.MessageList">
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;,&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;,&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;,void removeMessageViewFragment(), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showMessageViewPlaceHolder()&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void removeMessageViewFragment()&gt;"/>
        <node method="MessageList removeMessageViewFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList removeMessageViewFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList removeMessageViewFragment" type="commit" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;,&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="addToBackStack" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
      <methodtrace value="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;,&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;,void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="com.fsck.k9.activity.MessageList"/>
      <nodes>
        <node method="&lt;com.fsck.k9.activity.MessageList: void showThread(com.fsck.k9.Account,java.lang.String,long)&gt;"/>
        <node method="&lt;com.fsck.k9.activity.MessageList: void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean)&gt;"/>
        <node method="MessageList addMessageListFragment" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.fsck.k9.activity.MessageList: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="MessageList addMessageListFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="MessageList addMessageListFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(2131558591, $r1)"/>
        <node method="MessageList addMessageListFragment" type="commit" unit="$i0 = virtualinvoke $r3.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
</root>
